<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.sjwflowsys.mapper.DictMapper">
    
    <resultMap type="Dict" id="DictResult">
        <result property="id"    column="ID"    />
        <result property="parentid"    column="ParentID"    />
        <result property="title"    column="Title"    />
        <result property="code"    column="Code"    />
        <result property="value"    column="Value"    />
        <result property="note"    column="Note"    />
        <result property="other"    column="Other"    />
        <result property="sort"    column="Sort"    />
    </resultMap>

    <sql id="selectDictVo">
        select ID, ParentID, Title, Code, Value, Note, Other, Sort from dict
    </sql>

    <select id="selectDictList" parameterType="Dict" resultMap="DictResult">
        <include refid="selectDictVo"/>
        <where>  
            <if test="parentid != null  and parentid != ''"> and ParentID = #{parentid}</if>
            <if test="title != null  and title != ''"> and Title = #{title}</if>
            <if test="code != null  and code != ''"> and Code = #{code}</if>
            <if test="value != null  and value != ''"> and Value = #{value}</if>
            <if test="note != null  and note != ''"> and Note = #{note}</if>
            <if test="other != null  and other != ''"> and Other = #{other}</if>
            <if test="sort != null "> and Sort = #{sort}</if>
        </where>
    </select>
    
    <select id="selectDictById" parameterType="String" resultMap="DictResult">
        <include refid="selectDictVo"/>
        where ID = #{id}
    </select>
        
    <insert id="insertDict" parameterType="Dict">
        insert into dict
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">ID,</if>
            <if test="parentid != null">ParentID,</if>
            <if test="title != null">Title,</if>
            <if test="code != null">Code,</if>
            <if test="value != null">Value,</if>
            <if test="note != null">Note,</if>
            <if test="other != null">Other,</if>
            <if test="sort != null">Sort,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="parentid != null">#{parentid},</if>
            <if test="title != null">#{title},</if>
            <if test="code != null">#{code},</if>
            <if test="value != null">#{value},</if>
            <if test="note != null">#{note},</if>
            <if test="other != null">#{other},</if>
            <if test="sort != null">#{sort},</if>
         </trim>
    </insert>

    <update id="updateDict" parameterType="Dict">
        update dict
        <trim prefix="SET" suffixOverrides=",">
            <if test="parentid != null">ParentID = #{parentid},</if>
            <if test="title != null">Title = #{title},</if>
            <if test="code != null">Code = #{code},</if>
            <if test="value != null">Value = #{value},</if>
            <if test="note != null">Note = #{note},</if>
            <if test="other != null">Other = #{other},</if>
            <if test="sort != null">Sort = #{sort},</if>
        </trim>
        where ID = #{id}
    </update>

    <delete id="deleteDictById" parameterType="String">
        delete from dict where ID = #{id}
    </delete>

    <delete id="deleteDictByIds" parameterType="String">
        delete from dict where ID in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>